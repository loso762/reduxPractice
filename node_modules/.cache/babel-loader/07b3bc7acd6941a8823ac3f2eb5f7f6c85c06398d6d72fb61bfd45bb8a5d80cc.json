{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increase(state, action) {\n      state.counter += action.num;\n    },\n    decrease(state, action) {\n      state.counter -= action.num;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.num,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"decrease\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increase","state","action","num","decrease","toggleCounter","counterReducer","arguments","length","undefined","type","store"],"sources":["/Users/kihun/Desktop/연습/reduxPrac/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { counter: 0, showCounter: true };\n\ncreateSlice({\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increase(state, action) {\n      state.counter += action.num;\n    },\n    decrease(state, action) {\n      state.counter -= action.num;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.num,\n      showCounter: state.showCounter,\n    };\n  }\n  if (action.type === \"decrease\") {\n    return { counter: state.counter - 1, showCounter: state.showCounter };\n  }\n\n  if (action.type === \"toggle\") {\n    return { counter: state.counter, showCounter: !state.showCounter };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtDH,WAAW,CAAC;EACVI,IAAI,EAAE,SAAS;EACfH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACRC,QAAQA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACtBD,KAAK,CAACL,OAAO,IAAIM,MAAM,CAACC,GAAG;IAC7B,CAAC;IACDC,QAAQA,CAACH,KAAK,EAAEC,MAAM,EAAE;MACtBD,KAAK,CAACL,OAAO,IAAIM,MAAM,CAACC,GAAG;IAC7B,CAAC;IACDE,aAAaA,CAACJ,KAAK,EAAE;MACnBA,KAAK,CAACJ,WAAW,GAAG,CAACI,KAAK,CAACJ,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,MAAMS,cAAc,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCL,KAAK,GAAAM,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGZ,YAAY;EAAA,IAAEO,MAAM,GAAAK,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAClD,IAAIP,MAAM,CAACQ,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAO;MACLd,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGM,MAAM,CAACC,GAAG;MACnCN,WAAW,EAAEI,KAAK,CAACJ;IACrB,CAAC;EACH;EACA,IAAIK,MAAM,CAACQ,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAO;MAAEd,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAAEC,WAAW,EAAEI,KAAK,CAACJ;IAAY,CAAC;EACvE;EAEA,IAAIK,MAAM,CAACQ,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO;MAAEd,OAAO,EAAEK,KAAK,CAACL,OAAO;MAAEC,WAAW,EAAE,CAACI,KAAK,CAACJ;IAAY,CAAC;EACpE;EAEA,OAAOI,KAAK;AACd,CAAC;AAED,MAAMU,KAAK,GAAGlB,WAAW,CAACa,cAAc,CAAC;AAEzC,eAAeK,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}